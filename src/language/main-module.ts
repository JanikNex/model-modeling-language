/******************************************************************************
 * Copyright 2022 TypeFox GmbH
 * This program and the accompanying materials are made available under the
 * terms of the MIT License, which is available in the project root.
 ******************************************************************************/

import type {DefaultSharedModuleContext, LangiumSharedServices} from 'langium';
import {createDefaultModule, createDefaultSharedModule, inject} from 'langium';
import {
    GraphConstraintLanguageGeneratedModule,
    GraphManipulationLanguageGeneratedModule,
    ModelModelingLanguageGeneratedModule,
    ModelModelingLanguageGeneratedSharedModule,
} from './generated/module.js';
import {ModelModelingLanguageModule, ModelModelingLanguageServices} from "./model-modeling-language-module.js";
import {GraphConstraintLanguageModule, GraphConstraintLanguageServices} from "./graph-constraint-language-module.js";
import {
    registerValidationChecks as registerModelModelingLanguageValidations
} from "./model-modeling-language-validator.js";
import {
    registerValidationChecks as registerGraphConstraintLanguageValidations
} from "./graph-constraint-language-validator.js";
import {
    registerValidationChecks as registerGraphManipulationLanguageValidations
} from "./graph-manipulation-language-validator.js";
import {
    GraphManipulationLanguageModule,
    GraphManipulationLanguageServices
} from "./graph-manipulation-language-module.js";

/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
export function createMmlAndGclServices(context: DefaultSharedModuleContext): {
    shared: LangiumSharedServices,
    mmlServices: ModelModelingLanguageServices,
    gclServices: GraphConstraintLanguageServices,
    gmlServices: GraphManipulationLanguageServices
} {
    const shared = inject(
        createDefaultSharedModule(context),
        ModelModelingLanguageGeneratedSharedModule
    );
    const mmlServices = inject(
        createDefaultModule({shared}),
        ModelModelingLanguageGeneratedModule,
        ModelModelingLanguageModule
    );
    const gclServices = inject(
        createDefaultModule({shared}),
        GraphConstraintLanguageGeneratedModule,
        GraphConstraintLanguageModule
    );
    const gmlServices = inject(
        createDefaultModule({shared}),
        GraphManipulationLanguageGeneratedModule,
        GraphManipulationLanguageModule
    );
    shared.ServiceRegistry.register(mmlServices);
    shared.ServiceRegistry.register(gclServices);
    shared.ServiceRegistry.register(gmlServices);
    registerModelModelingLanguageValidations(mmlServices);
    registerGraphConstraintLanguageValidations(gclServices);
    registerGraphManipulationLanguageValidations(gmlServices);
    return {shared, mmlServices, gclServices, gmlServices};
}